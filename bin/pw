#!/usr/bin/env ruby

require 'pp'

require 'thor'
require 'net/scp'

require 'paravolve/custom_firewall'

module ParaVolve
  module FirewallBuilder
    class CLI < Thor
      desc "generate FILENAME", "generate iptables rules for FILENAME"
      def generate(filename)
        begin
          raise unless File.readable?(filename)

          fw = ParaVolve::CustomFirewall.configure( filename, { debug: false }, File.read(filename) ) 
          puts fw
        rescue Exception => ex
          STDERR.puts "Got exception: #{ex.class.to_s}"
          STDERR.puts "Backtrace:\n#{ex.backtrace.join("\n")}"
          exit 1
        end
      end

      desc "upload FILENAME HOST", "upload firewall to HOST:/etc/firewall.sh"
      def upload(filename, host)
        begin
          raise unless File.readable?(filename)
          fw = ParaVolve::CustomFirewall.configure( filename, { debug: false }, File.read(filename) ) 
          Net::SCP.upload!(host, "root", StringIO.new(fw.to_s), "/etc/firewall.sh")
        rescue Exception => ex
          STDERR.puts "Got exception: #{ex.class.to_s}"
          STDERR.puts "Backtrace:\n#{ex.backtrace.join("\n")}"
          exit 1
        end
      end
    end
  end
end

ParaVolve::FirewallBuilder::CLI.start(ARGV)
